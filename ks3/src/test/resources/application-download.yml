package com.github.peacetrue.samplecase.ks3;

import com.ksyun.ks3.dto.PutObjectResult;
import com.ksyun.ks3.service.Ks3;
import com.ksyun.ks3.service.Ks3Client;
import com.ksyun.ks3.service.Ks3ClientConfig;
import com.ksyun.ks3.service.request.PutObjectRequest;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.File;

/**
 * @author : xiayx
 * @since : 2021-02-08 10:23
 **/
@Slf4j
class Ks3Test {

    private Ks3 buildClient() {
        return new Ks3Client(
                "AKLTOWcmtrPUQ_Gu6xxgQPV0Hg",
                "ODZjp+i2xDusmBVVaCO8wyjmmxXHtIyry4WdXR9HlJuyyFmdKYC7kCUjd2NXQvdWKA==",
                new Ks3ClientConfig().withEndpoint("ks3-cn-beijing.ksyun.com")
        );
    }

    @Test
    void init() {
        Ks3 client = this.buildClient();
        Assertions.assertNotNull(client);
    }

    public static String getSourceFolderAbsolutePath(Class<?> clazz) {
        String path = clazz.getResource(clazz.getSimpleName() + ".class").getPath();
        String[] parts = path.split("/target/classes/java/", 2);
        if (parts[1].startsWith("main")) {
            parts[1] = "/src/main/java" + parts[1].substring("main".length());
        } else if (parts[1].startsWith("test")) {
            parts[1] = "/src/test/java" + parts[1].substring("test".length());
        }
        parts[1] = parts[1].substring(0, parts[1].length() - 1 - clazz.getSimpleName().length() - ".class".length());
        return String.join("", parts);

    }

    @Test
    void upload() {
        File file = new File("/Users/xiayx/Documents/Projects/samples/ks3/src/test/java/com/github/peacetrue/samplecase/ks3/Ks3Test.java");
        Ks3 client = this.buildClient();
        PutObjectRequest request = new PutObjectRequest("peace", "/test", file);
        PutObjectResult putObjectResult = client.putObject(request);
        log.debug("putObjectResult: {}", putObjectResult);
        Assertions.assertNotNull(putObjectResult);
    }
}
